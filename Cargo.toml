[workspace]
members = ['./procedural']
package.documentation = "https://docs.rs/evm-coder"
package.license = "MIT OR Apache-2.0"
package.repository = "https://github.com/UniqueNetwork/evm-coder"
package.version = "0.4.2"
resolver = "2"

[workspace.dependencies]
evm-coder-procedural = { path = "./procedural", version = "0.4.2" }

[package]
description = "EVM call decoding/encoding proc macros"
documentation.workspace = true
edition = "2021"
license.workspace = true
name = "evm-coder"
repository.workspace = true
version.workspace = true

[dependencies]
sha3-const = { version = "0.1.1", default-features = false }
# evm-coder reexports those proc-macro
evm-coder-procedural = { workspace = true }
# Evm uses primitive-types for H160, H256 and others
primitive-types = { version = "0.12.1", default-features = false }
# Evm doesn't have reexports for log and others
ethereum = { version = "0.14.0", default-features = false }
# We have tuple-heavy code in solidity.rs
impl-trait-for-tuples = "0.2.2"

[dev-dependencies]
bondrewd = { version = "0.1.14", features = ["derive"], default-features = false }
# We want to assert some large binary blobs equality in tests
hex = "0.4.3"
hex-literal = "0.3.4"
similar-asserts = "1.4"
trybuild = "1.0"
# Used to demonstrate enum derive feature
derivative = { version = "2.2" }
evm-coder-procedural = { workspace = true, features = ["bondrewd"] }

[features]
default = ["std"]
bondrewd = ["evm-coder-procedural/bondrewd"]
std = ["ethereum/std", "primitive-types/std"]
# Stub/interface generation
stubgen = []
